{"version":3,"sources":["webpack:///./src/components/navbar-booking-form/navbar-booking-form.js","webpack:///./src/pages/contact.js","webpack:///./src/components/navbar-booking-form/navbar-booking-form.module.css"],"names":["NavbarBookingForm","onSubmit","useState","startDate","setStartDate","endDate","setEndDate","errorMessage","setErrorMessage","bookingValue","setBookingValue","guestValue","setGuestValue","Row","bsPrefix","bookingFormStyles","formRowStyles","handleBookingChange","e","target","value","className","inputFormsWrappers","handleDatesChange","errorMessageStyles","handleGuestChange","xs","searchButtonStyles","onClick","schema","yup","name","required","email","message","ContactForm","pageInfo","pageName","title","keywords","styles","bookingFormWrapperAllPages","navigate","state","format","paragraphContainerNoImage","headingStyle","validationSchema","initialValues","values","a","Promise","resolve","setTimeout","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched","errors","isValid","noValidate","paddingBottom","Group","as","Col","md","controlId","Label","Control","type","placeholder","onChange","onBlur","Feedback","isInvalid","rows","contactPageBottomBorder","module","exports"],"mappings":"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","file":"component---src-pages-contact-js-a9ec227e743aa5eba3de.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Form, Button, Col } from \"react-bootstrap\"\nimport SelectTypeOfBooking from \"../select-type-of-booking/select-type-of-booking\"\nimport DateRangePicker from \"../date-range-picker/date-range-picker\"\nimport SelectNumberOfGuests from \"../select-number-of-guests/select-number-of-guests\"\nimport bookingFormStyles from \"./navbar-booking-form.module.css\"\n\nconst NavbarBookingForm = ({ onSubmit }) => {\n  const [startDate, setStartDate] = useState()\n  const [endDate, setEndDate] = useState()\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleDatesChange = ({ startDate, endDate }) => {\n    setStartDate(startDate)\n    setEndDate(endDate)\n  }\n\n  const [bookingValue, setBookingValue] = useState()\n\n  const handleBookingChange = e => {\n    setBookingValue(e.target.value)\n  }\n\n  const [guestValue, setGuestValue] = useState()\n\n  const handleGuestChange = e => {\n    setGuestValue(e.target.value)\n  }\n\n  return (\n    <Form>\n      <Form.Row bsPrefix={bookingFormStyles.formRowStyles}>\n        <SelectTypeOfBooking\n          bookingValue={bookingValue}\n          handleBookingChange={handleBookingChange}\n        />\n\n        <div className={bookingFormStyles.inputFormsWrappers}>\n          <DateRangePicker\n            handleDatesChange={handleDatesChange}\n            startDate={startDate}\n            endDate={endDate}\n          />\n          {errorMessage && (\n            <p className={bookingFormStyles.errorMessageStyles}>\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <SelectNumberOfGuests\n          guestValue={guestValue}\n          handleGuestChange={handleGuestChange}\n        />\n\n        <Col xs=\"auto\">\n          <Button\n            className=\"mb-2\"\n            bsPrefix={bookingFormStyles.searchButtonStyles}\n            onClick={() => {\n              if (!startDate || !endDate) {\n                return setErrorMessage(\n                  \"A start and end date is required for booking\"\n                )\n              } else {\n                onSubmit(startDate, endDate, bookingValue, guestValue)\n              }\n            }}\n          >\n            Book Now\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  )\n}\nexport default NavbarBookingForm\n","import React from \"react\"\nimport { navigate } from \"gatsby\"\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo/seo\"\nimport { GiSeahorse } from \"react-icons/gi\"\nimport { Container, Col, Form, Button } from \"react-bootstrap\"\nimport styles from \"./pages-styles/pagestyles-css-modules.module.css\"\nimport NavbarBookingForm from \"../components/navbar-booking-form/navbar-booking-form\"\nimport { Formik } from \"formik\"\nimport * as yup from \"yup\"\n\nconst schema = yup.object({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  message: yup.string().required(),\n})\n\nfunction ContactForm() {\n  const onSubmit = (startDate, endDate, bookingValue, guestValue) => {\n    navigate(\"/entabeni-booking-page/\", {\n      state: {\n        endDate: endDate.format(\"YYYY-MM-DD\"),\n        startDate: startDate.format(\"YYYY-MM-DD\"),\n        bookingValue,\n        guestValue,\n      },\n    })\n  }\n  return (\n    <Layout pageInfo={{ pageName: \"Contact\" }}>\n      <SEO\n        title=\"Contact page\"\n        keywords={[`Plett`, `Beach`, `House`, `Contact`, `Entabeni`]}\n      />\n      <div className={styles.bookingFormWrapperAllPages}>\n        <NavbarBookingForm onSubmit={onSubmit} />\n      </div>\n      <div className={styles.paragraphContainerNoImage}>\n        <GiSeahorse />\n        <h2 className={styles.headingStyle}>Get in touch</h2>\n      </div>\n      <Container>\n        <Formik\n          validationSchema={schema}\n          initialValues={{\n            name: \"\",\n            email: \"\",\n          }}\n          onSubmit={async values => {\n            await new Promise(resolve => setTimeout(resolve, 500))\n            alert(JSON.stringify(values, null, 2))\n          }}\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors,\n          }) => (\n            <Form\n              noValidate\n              onSubmit={handleSubmit}\n              className={styles.paddingBottom}\n            >\n              <Form.Row className=\"justify-content-md-center\">\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={values.name}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isValid={touched.name && !errors.name}\n                  />\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"email\"\n                    placeholder=\"Enter email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isValid={touched.email && !errors.email}\n                    isInvalid={!!errors.email}\n                  />\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.email}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row className=\"justify-content-md-center\">\n                <Form.Group\n                  as={Col}\n                  md=\"4\"\n                  controlId=\"exampleForm.ControlTextarea1\"\n                >\n                  <Form.Label>General enquiry</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows=\"3\"\n                    type=\"text\"\n                    placeholder=\"Enter enquiry\"\n                    name=\"General enquiry for Entebene\"\n                    value={values.message}\n                    onChange={handleChange}\n                    isValid={touched.message && !errors.message}\n                  />\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n              </Form.Row>\n              <Button type=\"submit\">Submit form</Button>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n      <div className={styles.contactPageBottomBorder}></div>\n    </Layout>\n  )\n}\n\nexport default ContactForm\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFormsWrappers\":\"navbar-booking-form-module--inputFormsWrappers--28cpm\",\"formRowStyles\":\"navbar-booking-form-module--formRowStyles--jYIpA\",\"searchButtonStyles\":\"navbar-booking-form-module--searchButtonStyles--BTvOi\",\"errorMessageStyles\":\"navbar-booking-form-module--errorMessageStyles--3VfRO\"};"],"sourceRoot":""}